package harkka;
// Generated by ComTest BEGIN
import java.util.List;
import java.io.File;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2016.04.18 21:27:57 // Generated by ComTest
 *
 */
public class NimetTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaaNimi50 
   * @throws alkioException when error
   */
  @Test
  public void testLisaaNimi50() throws alkioException {    // Nimet: 50
    Nimi n1 = new Nimi(); 	Nimi n2 = new Nimi(); 
    Nimet nimet = new Nimet(); 
    assertEquals("From: Nimet line: 54", 0, nimet.getLkm()); 
    nimet.lisaaNimi(n1); assertEquals("From: Nimet line: 55", 1, nimet.getLkm()); 
    nimet.lisaaNimi(n2); assertEquals("From: Nimet line: 56", 2, nimet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaNimi74 
   * @throws alkioException when error
   */
  @Test
  public void testPoistaNimi74() throws alkioException {    // Nimet: 74
    Nimet nimet = new Nimet(3); 
    Nimi n1 = new Nimi(); 		n1.rekisteroi(); 
    Nimi n2 = new Nimi(); 		n2.rekisteroi(); 
    Nimi n3 = new Nimi(); 		n3.rekisteroi(); 
    nimet.lisaaNimi(n1); 			nimet.lisaaNimi(n2); 		nimet.lisaaNimi(n3); 
    int tokaInd = n2.getId(); 
    assertEquals("From: Nimet line: 83", true, nimet.poistaNimi(tokaInd)); 
    assertEquals("From: Nimet line: 84", 2, nimet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi105 
   * @throws alkioException when error
   */
  @Test
  public void testEtsi105() throws alkioException {    // Nimet: 105
    Nimet nimet = new Nimet(); 
    Nimi n1 = new Nimi(); 		n1.parse("1|Kana & Riisi|20 min|3|3e"); 
    Nimi n2 = new Nimi(); 		n2.parse("2|Pinaattikeitto|10 min|2|2e"); 
    Nimi n3 = new Nimi(); 		n3.parse("3|Jauhelihakastike|30 min|3|3e"); 
    nimet.lisaaNimi(n1); 			nimet.lisaaNimi(n2); 		nimet.lisaaNimi(n3); 
    List<Nimi> löytyneet; 
    löytyneet = (List<Nimi>)nimet.etsi("*pin*", "Nimi"); 
    assertEquals("From: Nimet line: 116", 1, löytyneet.size()); 
    löytyneet = (List<Nimi>)nimet.etsi("*kastike*", "Nimi"); 
    assertEquals("From: Nimet line: 118", 1, löytyneet.size()); 
    löytyneet = (List<Nimi>)nimet.etsi("*na*", "Nimi"); 
    assertEquals("From: Nimet line: 120", 2, löytyneet.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsiNimi156 
   * @throws alkioException when error
   */
  @Test
  public void testEtsiNimi156() throws alkioException {    // Nimet: 156
    Nimet nimet = new Nimet(4); 
    Nimi n1 = new Nimi(); 		n1.rekisteroi(); 
    Nimi n2 = new Nimi(); 		n2.rekisteroi(); 
    Nimi n3 = new Nimi(); 		n3.rekisteroi(); 
    nimet.lisaaNimi(n1); 			nimet.lisaaNimi(n2); 		nimet.lisaaNimi(n3); 
    int ekaInd = n1.getId(); 
    assertEquals("From: Nimet line: 165", 1, nimet.etsiNimi(ekaInd + 1)); 
    assertEquals("From: Nimet line: 166", 2, nimet.etsiNimi(ekaInd + 2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta197 
   * @throws alkioException when error
   */
  @Test
  public void testLueTiedostosta197() throws alkioException {    // Nimet: 197
    String hakemisto = "testihakemistoN"; 
    String tiedosto = hakemisto + "/nimetTesti"; 
    File nimiTiedosto = new File(tiedosto + ".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    nimiTiedosto.delete(); 
    Nimet nimet = new Nimet(2); 
    Nimi n1 = new Nimi(); 			n1.rekisteroi(); 		n1.testiarvot(); 
    Nimi n2 = new Nimi(); 			n2.rekisteroi(); 		n2.testiarvot(); 
    nimet.lisaaNimi(n1); 				nimet.lisaaNimi(n2); 
    nimet.setOletusnimi(tiedosto); 
    nimet.tallenna(); 
    nimet = new Nimet(); 
    nimet.lueTiedostosta(tiedosto); 
    Nimi nimi1 = nimet.annaNimi(0); 
    assertEquals("From: Nimet line: 218", n1.getId(), nimi1.getId()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaNimi289 
   * @throws alkioException when error
   */
  @Test
  public void testAnnaNimi289() throws alkioException {    // Nimet: 289
    Nimet nimet = new Nimet(2); 
    Nimi nimi1 = new Nimi(); 
    nimi1.rekisteroi(); 			nimi1.testiarvot(); 
    nimet.lisaaNimi(nimi1); 
    assertEquals("From: Nimet line: 295", nimi1, nimet.annaNimi(0)); 
    Nimi nimi2 = new Nimi(); 		nimi2.rekisteroi(); 		nimi2.testiarvot(); 
    nimet.lisaaNimi(nimi2); 
    assertEquals("From: Nimet line: 298", nimi2, nimet.annaNimi(1)); 
  } // Generated by ComTest END
}