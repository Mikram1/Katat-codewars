package harkka;
// Generated by ComTest BEGIN
import java.util.*;
import java.io.File;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2016.04.18 21:27:45 // Generated by ComTest
 *
 */
public class OhjeetTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaaOhje46 
   * @throws alkioException when error
   */
  @Test
  public void testLisaaOhje46() throws alkioException {    // Ohjeet: 46
    Ohjeet ohjeet1 = new Ohjeet(); 
    Ohje o1 = new Ohje(1); 		Ohje o2 = new Ohje(2); 		Ohje o3 = new Ohje(3); 
    ohjeet1.lisaaOhje(o1); 		ohjeet1.lisaaOhje(o2); 		ohjeet1.lisaaOhje(o3); 
    assertEquals("From: Ohjeet line: 53", o1, ohjeet1.annaOhje(0)); 
    assertEquals("From: Ohjeet line: 54", o3, ohjeet1.annaOhje(2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaOhjeet69 
   * @throws alkioException when error
   */
  @Test
  public void testPoistaOhjeet69() throws alkioException {    // Ohjeet: 69
    Ohjeet ohjeet = new Ohjeet(); 
    Ohje o1 = new Ohje(1); 			Ohje o2 = new Ohje(1); 			Ohje o3 = new Ohje(2); 
    ohjeet.lisaaOhje(o1); 			ohjeet.lisaaOhje(o2); 			ohjeet.lisaaOhje(o3); 
    assertEquals("From: Ohjeet line: 75", true, ohjeet.poistaOhjeet(1)); 
    assertEquals("From: Ohjeet line: 76", 1, ohjeet.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaOhjeet99 
   * @throws alkioException when error
   */
  @Test
  public void testAnnaOhjeet99() throws alkioException {    // Ohjeet: 99
    Ohjeet ohjeet2 = new Ohjeet(); 
    Ohje o1 = new Ohje(1); 		Ohje o2 = new Ohje(2); 		Ohje o3 = new Ohje(1); 
    o1.testiarvot(); 				o2.testiarvot(); 			o3.testiarvot(); 
    ohjeet2.lisaaOhje(o1); 		ohjeet2.lisaaOhje(o2); 		ohjeet2.lisaaOhje(o3); 
    List<Ohje> tulos1; 					List<Ohje> tulos2; 
    tulos1 = ohjeet2.annaOhjeet(1); 
    tulos2 = ohjeet2.annaOhjeet(2); 
    assertEquals("From: Ohjeet line: 111", 2, tulos1.size()); 
    assertEquals("From: Ohjeet line: 112", 1, tulos2.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPaalleKirjoita132 
   * @throws alkioException when error
   */
  @Test
  public void testPaalleKirjoita132() throws alkioException {    // Ohjeet: 132
    Ohjeet ohjeet = new Ohjeet(); 
    Ohje o1 = new Ohje(1); 		Ohje o2 = new Ohje(1); 		Ohje o3 = new Ohje(2); 
    o1.testiarvot(); 				o2.testiarvot(); 			o3.testiarvot(); 
    ohjeet.lisaaOhje(o1); 		ohjeet.lisaaOhje(o2); 		ohjeet.lisaaOhje(o3); 
    ohjeet.paalleKirjoita(1, 1, "Laita pannu tulille."); 
    Ohje muokattuO2 = ohjeet.annaOhje(1); 
    assertEquals("From: Ohjeet line: 141", true, muokattuO2.getOhje().equals("Laita pannu tulille.")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta194 
   * @throws alkioException when error
   */
  @Test
  public void testLueTiedostosta194() throws alkioException {    // Ohjeet: 194
    String hakemisto = "testihakemistoO"; 
    String tiedosto = hakemisto + "/ohjeetTesti"; 
    File ohjeTiedosto = new File(tiedosto + ".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ohjeTiedosto.delete(); 
    Ohjeet ohjeet = new Ohjeet(); 
    Ohje o1 = new Ohje(); 			o1.testiarvot(); 
    Ohje o2 = new Ohje(); 			o2.testiarvot(); 
    ohjeet.lisaaOhje(o1); 			ohjeet.lisaaOhje(o2); 
    ohjeet.setTiedostonNimi(tiedosto); 
    ohjeet.tallenna(); 
    ohjeet = new Ohjeet(); 
    ohjeet.lueTiedostosta(tiedosto); 
    Ohje ohje1 = ohjeet.annaOhje(0); 
    ohje1.getOhje().equals(o1.getOhje()); 
  } // Generated by ComTest END
}